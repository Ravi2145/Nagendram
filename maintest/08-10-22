1.Amy went to a state which has N cities, numbered from 1 to N. There is bidirectional road connecting city X and Y if: X – Y >= K.

She has Q queries. In each query she has two integers A and B and she wants to know if there exists a path from city A to city B.

Help her by answering her queries. You are given T independent test cases.

 

Constraints

 

1 <= T <= 10
1 <= N <= 10^7
1 <= Q <= 10^5
1 <= K <= N
All input values are integers.
Input Format

First-line contains T.
First line of each test case consists of three space separated integers N, K and Q.
Next Q, lines of each test case consist of two space separated integers A and B. (1<=A, B<=N)
Output Format

For each test case, print in a newline for each query: 1 if a path exits from city A to city B otherwise print 0.
 

Sample Input 1

 

1

3 2 2

1 2

1 3

 

Sample Output 1

 

0

1

 

Explanation of Sample 1

 

The state has only one road, i.e., between city 1 and city 3 as if X = 3, Y = 1, then 3 – 1 > = 2 (K=2 here).

 

Things to Note for the Candidate:

 

﻿You can use your own IDE like Visual Studio Code, Eclipse, or any other IDE that you are comfortable with to build your solution code.
 

The IDE provided on the platform is purely for submission. Avoid using the IDE for coding out the solution.
 

Test against any custom input in your own IDE. In the IDE provided on the platform, you cannot pass custom test cases and see the output. 
 

Use standard input and standard output in your program for the IDE to run the test cases smoothly against your code. We are giving a sample problem statement along with a solution that will pass the test cases in the IDE. - Sample Problem Statement  (Right Click and Open in New Tab to view.)



function solve(n,k,a,b)
{
  
}


//Driver Code
var t = readline();
while(t--)
{
   var x1 = readline();
   var x = x1.trim();
   var y = x.split(" ");
   var n = Number(y[0]);
   var k = Number(y[1]);
   var q = Number(y[2]);
	while(q--)
	{
		var query1 = readline();
		var query2 = query1.trim();
		var query = query2.split(" ");
		var a = Number(query[0]);
		var b = Number(query[1]);
		var num  = solve(n,k,a,b);
		print(num);
	}
}







2.Antonio got an array A consisting of N positive integers as his christmas present.

Antonio likes uniformity and does not like this array because its elements have been arranged very randomly. He will like the array if and only if it is sorted(either in ascending or descending order).

To do so he decided to perform the below operation exactly once :

Select a subsequence of array A of size K and rearrange the numbers in that subsequence.
For example if A = [1 2 5 4 3], and Antonio decided to select subsequence [1 2 5 4 3], then he can rearrange it as [1 2 3 4 5] to sort array A in ascending order.
As rearranging a very large subsequence can be a tedious task, Antonio wants to select the subsequence with minimum possible length(i.e. K should be minimised).

As Antonio is weak in problem solving with arrays he asked you for help. Given array A, print the minimum possible value of K such that Antonio can perform the given operation on a K length subsequence and make array A sorted(either in ascending or descending order).

 

Input Format

 

First line of input contains a single integer denoting N.
Next line contains N space separated integers denoting the elements of array A.
 

Output Format

 

Print the minimum possible value of K such that Antonio can perform the given operation on a K length subsequence and make array A sorted(either in ascending or descending order).
 

Constraints

 

1<=N<=10^5
1<=Ai<=10^5
 

Sample Input 1

 

5

1 2 5 4 3

 

Sample Output 1

 

2

 

Explanation of Sample 1

 

Antonio can select the subsequence [1 2 5 4 3] and rearrange its elements as [1 2 3 4 5] to make array A sorted in ascending order.

 

Things to Note for the Candidate:

 

﻿You can use your own IDE like Visual Studio Code, Eclipse, or any other IDE that you are comfortable with to build your solution code.
 

The IDE provided on the platform is purely for submission. Avoid using the IDE for coding out the solution.
 

Test against any custom input in your own IDE. In the IDE provided on the platform, you cannot pass custom test cases and see the output. 
 

Use standard input and standard output in your program for the IDE to run the test cases smoothly against your code. We are giving a sample problem statement along with a solution that will pass the test cases in the IDE. - Sample Problem Statement  (Right Click and Open in New Tab to view.)


function subsequenceRearrangement(arr, n)
{
	<!-- arr.sort((a,b)=>a-b)
	console.log(arr); -->
}
//Driver Code
var n = readline();
var temp = readline().trim();
var s = temp.split(" ");
for(i=0;i<n;i++)
{
    s[i]=Number(s[i]);
}
var num  = subsequenceRearrangement(s,n);
print(num);




function subsequenceLength(array){
	if(arr.length == 0){
		return 0;
	}
	var len = 1;
	var maxlen = 1;
	for(let i=0;i<array.length;i++){
		if(array[i-1]<array[i]){
			len++;
		}else{
			len = 1;
		}
		maxlen = Math.max(len,maxlen);
	}
	return maxlen;
}
let arr = [1,2,5,4,3];
console.log(subsequenceLength(arr))
